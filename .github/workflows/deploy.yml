name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com

      # Step 4: Build Docker image
      - name: Build Docker image
        run: docker build -t flask-app .

      # Step 5: Tag the Docker image for ECR
      - name: Tag Docker image
        run: docker tag flask-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/flask-app:latest

      # Step 6: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/flask-app:latest

      # Step 7: Deploy to Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          eb init -p docker flask-app --region us-west-2
          eb deploy